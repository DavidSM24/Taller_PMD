{"version":3,"file":"default-src_app_administrator_carRepair_car-repair-update_car-repair-update_page_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoE;AACA;AACN;AAES;AACX;AAEhB;AAEwC;AACnB;IAQpD,mBAAmB,SAAnB,mBAAmB;IAuB9B,YACU,eAAgC,EAChC,gBAAkC,EAClC,WAAwB,EACxB,GAAgB,EACjB,eAAuC,EACtC,EAAgB;QALhB,oBAAe,GAAf,eAAe,CAAiB;QAChC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,QAAG,GAAH,GAAG,CAAa;QACjB,oBAAe,GAAf,eAAe,CAAwB;QACtC,OAAE,GAAF,EAAE,CAAc;QAjB1B,6EAA6E;QACtE,cAAS,GAAG,EAAE,CAAC;IAqBtB,CAAC;IAED,QAAQ;QACN,qCAAqC;QACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACpG,8HAA8H;QAC9H,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YACtG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;SACzF;QAID,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAE1C,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACxE,KAAK,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC1D,WAAW,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAChE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAChD,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAC,+DAAmB,CAAC;YACnD,UAAU,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC,+DAAmB,EAAC,8DAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3F,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;YAC/C,SAAS,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC5D,iGAAiG;YACjG,gBAAgB,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC;YACzC,UAAU,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACvC,QAAQ,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,+DAAmB,CAAC,CAAC;SAG3D,CAAC,CAAC;IACL,CAAC;IACK,eAAe;;QAErB,CAAC;KAAA;IAGD;;OAEG;IACU,aAAa;;YAExB,MAAM,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;YAEhC,IAAI,MAAM,GAAY,IAAI,CAAC;YAG3B,IAAI,IAAI,CAAC,cAAc,IAAE,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE;gBACpM,MAAM,GAAG,KAAK,CAAC;gBACf,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,4DAA4D,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACtG;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;gBACtG,MAAM,GAAG,KAAK,CAAC;gBACf,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,+DAA+D,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aACzG;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;gBACnG,MAAM,GAAG,KAAK,CAAC;gBACf,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,wEAAwE,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;aAClH;YAED,IAAI,MAAM,EAAE;gBACV,qBAAqB;gBACrB,IAAI,CAAC,YAAY,GAAG;oBAElB,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE;oBACrB,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;oBACpD,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;oBACjC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK;oBAC3B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;oBACjC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;oBACxD,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;oBACpD,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK;oBACxC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK;oBAC9C,UAAU,EAAE,IAAI,CAAC,cAAc;oBAC/B,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK;oBACtD,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;oBAClD,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;iBAElC;gBACD,IAAI;oBACF,0CAA0C;oBAC1C,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAElF,IAAI,IAAI,CAAC,YAAY,EAAE;wBAErB,iFAAiF;wBACjF,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;4BAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;yBAChC,CAAC;wBACF,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,gCAAgC,EAAE,SAAS,EAAE,0BAA0B,CAAC,CAAC;wBAC/F,IAAI,CAAC,EAAE,CAAC,KAAK,GAAC,IAAI,CAAC;qBACpB;yBACI;wBACH,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,yDAAyD,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;wBAClG,IAAI,CAAC,UAAU,EAAE,CAAC;qBACnB;oBAED,0EAA0E;iBAK3E;gBAAC,OAAO,KAAK,EAAE;oBACd,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,yDAAyD,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;iBAEnG;aACF;YAED,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAEzB,CAAC;KAAA;IAED;;OAEG;IACI,UAAU;QACf,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IACD;;OAEG;IACH,KAAK;QACH,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,KAAa;QACtB,OAAO,oDAAM,CAAC,oDAAQ,CAAC,KAAK,CAAC,EAAE,qBAAqB,CAAC,CAAC;IACxD,CAAC;IAKD;;;OAGG;IACH,gBAAgB,CAAC,KAAK;QACpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;QAC7E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,YAAY;QAEjB,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAE,IAAI,EAAC;YAEhD,IAAI,IAAI,CAAC,cAAc,IAAE,IAAI,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,EAAE;gBACnM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;gBACvG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;gBAClG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;SACF;IACH,CAAC;CAGF;;YAtOqB,4DAAe;YAE5B,iFAAgB;YAHhB,uDAAW;YAIX,sEAAW;YAIX,8FAAsB;YACtB,mEAAa;;;wBAUnB,iDAAK;uBAEL,qDAAS,SAAC,wDAAW;;AAJX,mBAAmB;IAL/B,yDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,6LAA4C;;KAE7C,CAAC;GACW,mBAAmB,CAsN/B;AAtN+B;;;;;;;;;;;;;;;AClBhC,iEAAe,i9BAAi9B,oBAAoB,y7BAAy7B,0uHAA0uH,8VAA8V,g2BAAg2B,0WAA0W,o4CAAo4C,0RAA0R,gVAAgV","sources":["./src/app/administrator/carRepair/car-repair-update/car-repair-update.page.ts","./src/app/administrator/carRepair/car-repair-update/car-repair-update.page.html"],"sourcesContent":["import { Component, ViewChild, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IonDatetime, ModalController } from '@ionic/angular';\r\nimport { CarRepair } from 'src/app/models/CarRepair';\r\nimport { CarRepairService } from 'src/app/services/car-repair.service';\r\nimport { UtilService } from 'src/app/services/util.service';\r\n\r\nimport { format, parseISO } from 'date-fns';\r\n\r\nimport { DateTimeServiceService } from 'src/app/services/date-time-service.service';\r\nimport { AgencyService } from '../../../services/agency.service';\r\nimport { Agency } from 'src/app/models/Agency';\r\n\r\n@Component({\r\n  selector: 'app-car-repair-update',\r\n  templateUrl: './car-repair-update.page.html',\r\n  styleUrls: ['./car-repair-update.page.scss'],\r\n})\r\nexport class CarRepairUpdatePage implements OnInit {\r\n\r\n  @Input() carRepair: CarRepair;\r\n  //variables para la fecha\r\n  @ViewChild(IonDatetime) datetime: IonDatetime;\r\n  //Guarda la fecha con el formato de españa\r\n  public spanishDateOrder: string;\r\n\r\n  //Guarda la fecha de la reparación con el formato de españa\r\n  public spanishDateRepair: string;\r\n  //Guarda la fecha de la reparación con un formato legible para el ion-dateTime\r\n  public stringDateRepair: string;\r\n  //variable que guarda los datos proporcionados por el evento del ion-dateTime\r\n  public dateValue = '';\r\n  //Variable que guarda la fecha de reparación con el formato correcto para ser enviado a la api\r\n  public formatedString;\r\n  public formCarRepair: FormGroup;\r\n  public id: number;\r\n  private newCarRepair: CarRepair;\r\n\r\n  public errorForm:boolean;\r\n\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private carRepairService: CarRepairService,\r\n    private formBuilder: FormBuilder,\r\n    private uts: UtilService,\r\n    public dateTimeService: DateTimeServiceService,\r\n    private as:AgencyService\r\n\r\n  ) {\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    //se crea la fecha en formato español\r\n    this.spanishDateOrder = this.dateTimeService.formatSpanishDateString(\"\" + this.carRepair.dateOrder);\r\n    //compruba si exite una fecha de reparación previa, en caso de que exista se preparan las variables para mostrarlas en el html\r\n    if (this.carRepair.dateRepair) {\r\n      this.spanishDateRepair = this.dateTimeService.formatSpanishDateString(\"\" + this.carRepair.dateRepair);\r\n      this.formatedString = this.dateTimeService.formatString(\"\" + this.carRepair.dateRepair);\r\n    }\r\n\r\n\r\n\r\n    this.formCarRepair = this.formBuilder.group({\r\n\r\n      operation: [this.carRepair.operation, [Validators.required]],\r\n      carPlate: [this.carRepair.carPlate.toUpperCase(), [Validators.required]],\r\n      model: [this.carRepair.model, [Validators.required]],\r\n      brandCar: [this.carRepair.brandCar, [Validators.required]],\r\n      clienteName: [this.carRepair.clienteName, [Validators.required]],\r\n      nor: [this.carRepair.nor, [Validators.required]],\r\n      amount: [this.carRepair.amount,Validators.required],\r\n      asigPoints: [this.carRepair.asigPoints, [Validators.required,Validators.pattern(\"[0-9]+\")]],\r\n      myAgency: [this.carRepair.myAgency.myUser.name],\r\n      dateOrder: [this.carRepair.dateOrder, [Validators.required]],\r\n      //esta variable solo se usa para mostrar la fecha de la orden con el formato de España en el html\r\n      spanishDateOrder: [this.spanishDateOrder],\r\n      dateRepair: [this.carRepair.dateRepair],\r\n      repaired: [this.carRepair.repaired, [Validators.required]]\r\n\r\n\r\n    });\r\n  }\r\n  async ionViewDidEnter() {\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Método que guarda la nota una vez editada\r\n   */\r\n  public async editCarRepair() {\r\n\r\n    await this.uts.presentLoading();\r\n\r\n    let result: boolean = true;\r\n\r\n    \r\n    if (this.formatedString!=null && !this.dateTimeService.validateDates(this.dateTimeService.formatString(this.carRepair.dateOrder.toString()), this.dateTimeService.formatString(this.formatedString))) {\r\n      result = false;\r\n      this.uts.presentToast(\"La fecha de reparación no puede ser anterior a la de alta.\", \"danger\", \"ban\");\r\n    }\r\n\r\n    if (this.formCarRepair.get(\"asigPoints\").value < 1 && this.formCarRepair.get(\"repaired\").value == true) {\r\n      result = false;\r\n      this.uts.presentToast(\"No se puede asignar una reparación como terminada a 0 puntos.\", \"danger\", \"ban\");\r\n    }\r\n\r\n    if (this.formCarRepair.get(\"amount\").value == 0 && this.formCarRepair.get(\"repaired\").value == true) {\r\n      result = false;\r\n      this.uts.presentToast(\"No se puede asignar una reparación como terminada con un coste de 0 €.\", \"danger\", \"ban\");\r\n    }\r\n\r\n    if (result) {\r\n      //se asigna los datos\r\n      this.newCarRepair = {\r\n\r\n        id: this.carRepair.id,\r\n        operation: this.formCarRepair.get(\"operation\").value,\r\n        carPlate: this.carRepair.carPlate,\r\n        model: this.carRepair.model,\r\n        brandCar: this.carRepair.brandCar,\r\n        clienteName: this.formCarRepair.get(\"clienteName\").value,\r\n        dateOrder: this.formCarRepair.get(\"dateOrder\").value,\r\n        nor: this.formCarRepair.get(\"nor\").value,\r\n        amount: this.formCarRepair.get(\"amount\").value,\r\n        dateRepair: this.formatedString,\r\n        asigPoints: this.formCarRepair.get(\"asigPoints\").value,\r\n        repaired: this.formCarRepair.get(\"repaired\").value,\r\n        myAgency: this.carRepair.myAgency\r\n\r\n      }\r\n      try {\r\n        //Guarda la reparación en la base de datos\r\n        this.newCarRepair = await this.carRepairService.createOrUpdate(this.newCarRepair);\r\n\r\n        if (this.newCarRepair) {\r\n          \r\n          //Cierra el modal pasando la reparación guardada a la página con las reparaciones\r\n          this.modalController.dismiss({\r\n            newCarRepair: this.newCarRepair\r\n          })\r\n          this.uts.presentToast(\"Se ha gurdadado correctamente.\", \"success\", \"checkmark-circle-outline\");\r\n          this.as.added=true;\r\n        }\r\n        else {\r\n          this.uts.presentToast(\"Fallo al actualizar la reparación. Inténtelo más tarde.\", \"danger\", 'ban');\r\n          this.closeModal();\r\n        }\r\n\r\n        //presenta el toast para que el usuario sepa que se ha guardado con  éxito\r\n\r\n\r\n\r\n\r\n      } catch (error) {\r\n        this.uts.presentToast(\"Fallo al actualizar la reparación. Inténtelo más tarde.\", \"danger\", 'ban');\r\n        \r\n      }\r\n    }\r\n\r\n    this.uts.hideLoading();\r\n\r\n  }\r\n\r\n  /**\r\n   * Método para cerrar el modal\r\n   */\r\n  public closeModal() {\r\n    this.modalController.dismiss();\r\n  }\r\n\r\n  /**\r\n   * Metodo que se usa en el ion-DateTime para confirmar la fecha elegida\r\n   */\r\n  confirm() {\r\n    this.datetime.confirm(true);\r\n    this.validateForm();\r\n  }\r\n  /**\r\n   * Método que se usa en ion-DateTime para cerrar la ventana\r\n   */\r\n  reset() {\r\n    this.datetime.cancel(true);\r\n  }\r\n\r\n  /**\r\n   * Metodo para darle formato a la fecha y que se pueda guardar en la base de datos\r\n   * @param value\r\n   * @returns fecha con el formato yyyy-MM-ddTHH:mm\r\n   */\r\n  formatDate(value: string): string {\r\n    return format(parseISO(value), 'yyyy-MM-dd HH:mm:SS');\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Método que asigna la fecha de reparación cuando el usuario pulsa el botón de aceptar en el ión date time\r\n   * @param event\r\n   */\r\n  changeDateRepair(event) {\r\n    this.spanishDateRepair = this.dateTimeService.formatSpanishDateString(event);\r\n    this.stringDateRepair = this.dateTimeService.formatString(event);\r\n    this.dateValue = event;\r\n    this.formatedString = this.formatDate(this.dateValue);\r\n    this.validateForm();\r\n  }\r\n\r\n  public validateForm(){\r\n\r\n    this.errorForm=false;\r\n    if(this.formCarRepair.get(\"repaired\").value==true){\r\n\r\n      if (this.formatedString==null ||!this.dateTimeService.validateDates(this.dateTimeService.formatString(this.carRepair.dateOrder.toString()), this.dateTimeService.formatString(this.formatedString))) {\r\n        this.errorForm = true;\r\n      }\r\n\r\n      if (this.formCarRepair.get(\"asigPoints\").value == 0 && this.formCarRepair.get(\"repaired\").value == true) {\r\n        this.errorForm = true;\r\n      }\r\n\r\n      if (this.formCarRepair.get(\"amount\").value < 1 && this.formCarRepair.get(\"repaired\").value == true) {\r\n        this.errorForm = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Editar Reparación</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div class=\\\"body\\\">\\r\\n    <form [formGroup]=\\\"formCarRepair\\\" class=\\\"ion-padding\\\">\\r\\n      <div class=\\\"formulario\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Fecha de alta: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"4\\\" sizeLg=\\\"4\\\">\\r\\n              <ion-input class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"spanishDateOrder\\\"></ion-input>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"3.2\\\" sizeLg=\\\"6\\\">\\r\\n\\r\\n              <ion-item button=\\\"true\\\" id=\\\"open-date-input\\\">\\r\\n                <ion-label>Fecha de reparación:</ion-label>\\r\\n                <ion-text slot=\\\"end\\\">{{ spanishDateRepair }}</ion-text>\\r\\n                <ion-popover trigger=\\\"open-date-input\\\" show-backdrop=\\\"false\\\">\\r\\n                  <ng-template>\\r\\n                    <ion-datetime color=\\\"secondary\\\" #popoverDatetime [value]=\\\"stringDateRepair\\\"\\r\\n                      (ionChange)=\\\"changeDateRepair(popoverDatetime.value)\\\">\\r\\n                      <ion-buttons slot=\\\"buttons\\\">\\r\\n                        <ion-button shape=\\\"round\\\" class=\\\"button\\\" (click)=\\\"confirm()\\\">Aceptar</ion-button>\\r\\n                        <ion-button shape=\\\"round\\\" class=\\\"button\\\" (click)=\\\"reset()\\\">Cancelar</ion-button>\\r\\n                      </ion-buttons>\\r\\n                    </ion-datetime>\\r\\n                  </ng-template>\\r\\n                </ion-popover>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col>\\r\\n              <p style=\\\"color:red;\\\" *ngIf=\\\"this.formatedString!=null && !this.dateTimeService.validateDates(this.dateTimeService.formatString(this.carRepair.dateOrder.toString()), this.dateTimeService.formatString(this.formatedString))&&this.errorForm==true\\\">\\r\\n                *Si se va a asignar la reparación como completada, la fecha de reparación debe ser posterior a la del alta..\\r\\n              </p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Operación: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" inputmode=\\\"numeric\\\" class=\\\"customInput\\\"\\r\\n                formControlName=\\\"operation\\\"\\r\\n                (ionChange)=\\\"this.validateForm()\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Matrícula: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"carPlate\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Modelo: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"5\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"model\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Marca: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"5\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"brandCar\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Cliente: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"clienteName\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>NOR: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"nor\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Coste: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"amount\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col>\\r\\n              <p style=\\\"color:red;\\\" *ngIf=\\\"this.formCarRepair.get('amount').invalid&&formCarRepair.get('amount').touched\\\">\\r\\n                *Campo obligatorio. Introduzca algún valor.\\r\\n              </p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col>\\r\\n              <p style=\\\"color:red;\\\" *ngIf=\\\"this.formCarRepair.get('repaired').value==true&&this.formCarRepair.get('amount').value<1\\\">\\r\\n                *Si se va a asignar la reparación como completada, el coste no puede ser 0 €.\\r\\n              </p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Puntos: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"asigPoints\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col>\\r\\n              <p style=\\\"color:red;\\\" *ngIf=\\\"this.formCarRepair.get('asigPoints').invalid&&formCarRepair.get('asigPoints').touched\\\">\\r\\n                *Campo obligatorio. Introduzca un valor entero.\\r\\n              </p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col>\\r\\n              <p style=\\\"color:red;\\\" *ngIf=\\\"this.formCarRepair.get('repaired').value==true&&this.formCarRepair.get('asigPoints').value<1\\\">\\r\\n                *Si se va a asignar la reparación como completada, los puntos no pueden ser inferiores a 1.\\r\\n              </p>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Agencia: </ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input\\r\\n              (ionChange)=\\\"this.validateForm()\\\"\\r\\n              class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"myAgency\\\"></ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"7\\\" sizeLg=\\\"2\\\">\\r\\n              Reparado:\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"7\\\" sizeLg=\\\"4\\\">\\r\\n              <ion-item lines=\\\"none\\\">\\r\\n                No<ion-toggle formControlName=\\\"repaired\\\" (ionChange)=\\\"this.validateForm()\\\"></ion-toggle>Si\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-button expand=\\\"block\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\" (click)=\\\"closeModal()\\\"\\r\\n                class=\\\"button\\\">\\r\\n                Cancelar\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-button expand=\\\"block\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\" (click)=\\\"editCarRepair()\\\"\\r\\n                class=\\\"button\\\"\\r\\n                [disabled]=\\\"formCarRepair.invalid||this.errorForm\\\">\\r\\n                Guardar\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}