{"version":3,"file":"default-src_app_administrator_carRepair_car-repair-update_car-repair-update_page_ts.js","mappings":"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","sources":["./src/app/administrator/carRepair/car-repair-update/car-repair-update.page.ts","./src/app/services/car-repair.service.ts","./src/app/administrator/carRepair/car-repair-update/car-repair-update.page.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { CarRepair } from 'src/app/models/CarRepair';\r\nimport { CarRepairService } from 'src/app/services/car-repair.service';\r\n\r\n@Component({\r\n  selector: 'app-car-repair-update',\r\n  templateUrl: './car-repair-update.page.html',\r\n  styleUrls: ['./car-repair-update.page.scss'],\r\n})\r\nexport class CarRepairUpdatePage implements OnInit {\r\n\r\n  @Input() carRepair:CarRepair;\r\n\r\n  public formCarRepair:FormGroup;\r\n  public id:number;\r\n  private oldCarRepair:CarRepair;\r\n  private newCarRepair:CarRepair;\r\n  public validator=this.formBuilder.group({\r\n    operation:['',[Validators.required]],\r\n    carPlate:['',[Validators.required]],\r\n    model:['',[Validators.required]],\r\n    brandCar:['',[Validators.required]],\r\n    clientName:['',[Validators.required]],\r\n    nor:['',[Validators.required]],\r\n    amount:[''],\r\n    asigPoints:[''],\r\n    myAgency:[''],\r\n    dateOrder:['',[Validators.required]],\r\n    dateRepair:[''],\r\n    repaired:['',[Validators.required]]\r\n\r\n  });\r\n\r\n  constructor(\r\n    private modalController: ModalController,\r\n    private carRepairService:CarRepairService,\r\n    private formBuilder:FormBuilder,\r\n    private activateRoute:ActivatedRoute,\r\n  ) {\r\n   \r\n   }\r\n\r\n  ngOnInit() {\r\n    this.formCarRepair=this.formBuilder.group({\r\n      operation:[this.carRepair.operation,[Validators.required]],\r\n    carPlate:[this.carRepair.carPlate,[Validators.required]],\r\n    model:[this.carRepair.model,[Validators.required]],\r\n    brandCar:[this.carRepair.brandCar,[Validators.required]],\r\n    clientName:[this.carRepair.clientName,[Validators.required]],\r\n    nor:[this.carRepair.nor,[Validators.required]],\r\n    amount:[this.carRepair.amount],\r\n    asigPoints:[this.carRepair.asigPoints],\r\n    myAgency:[this.carRepair.myAgency.myUser.name],\r\n    dateOrder:[this.carRepair.dateOrder,[Validators.required]],\r\n    dateRepair:[this.carRepair.dateRepair],\r\n    repaired:[this.carRepair.repaired,[Validators.required]]\r\n    });\r\n  }\r\n  async ionViewDidEnter(){\r\n     \r\n    this.oldCarRepair={\r\n      id:this.carRepair.id,\r\n    operation:this.carRepair.operation,\r\n    carPlate:this.carRepair.carPlate,\r\n    model:this.carRepair.model,\r\n    brandCar:this.carRepair.brandCar,\r\n    clientName:this.carRepair.clientName,\r\n    dateOrder:this.carRepair.dateOrder,\r\n    nor:this.carRepair.nor,\r\n    amount:this.carRepair.amount,\r\n    dateRepair:this.carRepair.dateRepair,\r\n    asigPoints:this.carRepair.asigPoints,\r\n    repaired:this.carRepair.repaired,\r\n    myAgency:this.carRepair.myAgency\r\n\r\n    }\r\n  }\r\n\r\n  public setCarRepair():void{\r\n    this.validator=this.formBuilder.group({\r\n    operation:[this.carRepair?.operation,[Validators.required]],\r\n    carPlate:[this.carRepair?.carPlate,[Validators.required]],\r\n    model:[this.carRepair?.model,[Validators.required]],\r\n    brandCar:[this.carRepair?.brandCar,[Validators.required]],\r\n    clientName:[this.carRepair?.clientName,[Validators.required]],\r\n    nor:[this.carRepair?.nor,[Validators.required]],\r\n    amount:[this.carRepair?.amount],\r\n    asigPoints:[this.carRepair?.asigPoints],\r\n    myAgency:[this.carRepair?.myAgency.myUser.name],\r\n    dateOrder:[this.carRepair?.dateOrder,[Validators.required]],\r\n    dateRepair:[this.carRepair?.dateRepair],\r\n    repaired:[this.carRepair?.repaired,[Validators.required]]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Método que guarda la nota una vez editada\r\n   */\r\n  public async editCarRepair(){\r\n    this.newCarRepair={\r\n      id:this.carRepair.id,\r\n      operation:this.formCarRepair.get(\"operation\").value,\r\n      carPlate:this.carRepair.carPlate,\r\n      model:this.carRepair.model,\r\n      brandCar:this.carRepair.brandCar,\r\n      clientName:this.formCarRepair.get(\"clientName\").value,\r\n      dateOrder:this.carRepair.dateOrder,\r\n      nor:this.formCarRepair.get(\"nor\").value,\r\n      amount:this.formCarRepair.get(\"amount\").value,\r\n      dateRepair:this.formCarRepair.get(\"dateRepair\").value,\r\n      asigPoints:this.formCarRepair.get(\"asigPoints\").value,\r\n      repaired:this.formCarRepair.get(\"repaired\").value,\r\n      myAgency:this.carRepair.myAgency\r\n    }\r\n    try {\r\n      console.log(\"Nuevo\"+this.newCarRepair.operation);\r\n      this.carRepairService.createOrUpdate(this.newCarRepair);\r\n      //añadir un toast\r\n      console.log(this.carRepairService.getById(this.newCarRepair.id));\r\n      this.closeModal();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  public closeModal(){\r\n    this.modalController.dismiss();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CarRepair } from '../models/CarRepair';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarRepairService {\r\n\r\n  endpoint:string=\"/carRepairs\";\r\n\r\n  URLDatabase:string;\r\n\r\n  constructor(\r\n    private http:HttpClient\r\n  ) {\r\n    this.URLDatabase=environment.herokuConfig.url;\r\n   }\r\n\r\n   /**\r\n    * Método que carga una lista de reparaciones de coches en función de la petición\r\n    * @param endpoint \r\n    * @returns \r\n    */\r\n   private async getListData(endpoint:string):Promise<CarRepair[]>{\r\n     let carRepairs:CarRepair[]=[];\r\n\r\n    return new Promise(resolve=>{\r\n\r\n      this.http.get(endpoint).subscribe((data:any[])=>{//se trae la petición \r\n\r\n        if(data !=null && data.length>0){//comprueba que la petición se ha traido correctamente\r\n\r\n          for(let carRepair of data){\r\n\r\n            const tmp:CarRepair={//se instancia una reparacion\r\n\r\n              id:carRepair.id,\r\n              operation:carRepair.operation,\r\n              carPlate:carRepair.carPlate,\r\n              model:carRepair.model,\r\n              brandCar:carRepair.brandCar,\r\n              clientName:carRepair.clientName,\r\n              dateOrder:carRepair.Date,\r\n              nor:carRepair.nor,\r\n              amount:carRepair.amount,\r\n              dateRepair:carRepair.dateRepair,\r\n              asigPoints:carRepair.asigPoints,\r\n              repaired:carRepair.repaired,\r\n              myAgency:carRepair.myAgency\r\n            }\r\n\r\n            carRepairs.push(tmp);//se añade a la lista\r\n            \r\n          }\r\n        }\r\n        resolve(carRepairs);\r\n      },error=>{\r\n        console.log(error);\r\n        //mandar una alerta\r\n      });\r\n    });\r\n   }\r\n\r\n   /**\r\n    * Metodo que devuelve una promesa de todas las reparaciones de la base de datos\r\n    * @returns Promise<CarRepair[]> con todas las reparaciones de la base de datos\r\n    */\r\n   public async getAll(): Promise<CarRepair[]>{\r\n\r\n     return this.getListData(this.URLDatabase+this.endpoint);\r\n\r\n   }\r\n\r\n   /**\r\n    * Método que devuevle las reparaciones de la base de datos de forma paginada.\r\n    * Devuelve una lista con el número de reparaciones especificadas \r\n    * a partir del último elemento que se le indique \r\n    * @param limit número de reparaciones que se quiera obtener\r\n    * @param offset a partir de que reparación se empieza a contar, con ese incliudo\r\n    * @returns Promise<CarRepair[]>\r\n    */\r\n   public async getAllPaged(limit:number,offset:number):Promise<CarRepair[]>{\r\n\r\n     return this.getListData(this.URLDatabase+this.endpoint+\"/elements/\" + limit + \"/page/\" + offset);\r\n\r\n   }\r\n\r\n   /**\r\n    * Método que devuelve una reparación con la id que se le ha indicado\r\n    * @param id id de la reparación que se quiera obtener\r\n    * @returns Promise<CarRepair> con la id introducida\r\n    */\r\n   public async getById(id:number):Promise<CarRepair>{\r\n\r\n    let carRepair:CarRepair=null;\r\n\r\n    return new Promise(resolve=>{\r\n      this.http.get(this.URLDatabase+this.endpoint+ \"/id/\" + id).subscribe((a:any)=>{\r\n\r\n        if(a.id){//comprueba que la reparación que se ha traido tiene id\r\n          const tmp:CarRepair={\r\n            id:a.id,\r\n            operation:a.operation,\r\n            carPlate:a.carPlate,\r\n            model:a.model,\r\n            brandCar:a.brandCar,\r\n            clientName:a.clientName,\r\n            dateOrder:a.dateOrder,\r\n            nor:a.nor,\r\n            amount:a.amount,\r\n            dateRepair:a.dateRepair,\r\n            asigPoints:a.asigPoints,\r\n            repaired:a.repaired,\r\n            myAgency:a.myAgency\r\n          }\r\n\r\n          carRepair=tmp;\r\n        }\r\n\r\n        resolve(carRepair);\r\n\r\n      },error=>{\r\n        console.log(error);\r\n        //introducir una alerta\r\n        resolve(carRepair);\r\n      });\r\n\r\n    });\r\n   }\r\n\r\n   //ByOperationpaged\r\n   /**\r\n    * Método que devuelve una lista de reparaciones en función de la operación\r\n    * @param operation Número de la operación de la reparación\r\n    * @param element Número de reparaciones que se quiera obtener\r\n    * @param offset a partir de que reparación se va a devolver\r\n    * @returns Promise<CarRepair[]>\r\n    */\r\n\r\n   public async getByOperationPaged(operation:number,element:number,offset:number):Promise<CarRepair[]>{\r\n     \r\n    return this.getListData(this.URLDatabase+this.endpoint+\"/operation/\"+operation+\"/elements/\"+element+\"/page/\"+offset);\r\n   }\r\n\r\n   //ByCarPLate\r\n\r\n   /**\r\n    * Método que devuelve una lista de reparaciones en función de la matrícula\r\n    * @param carPlate Matrícula del coche que se quiere buscar\r\n    * @param element Número de reparaciones que se quiera obtener\r\n    * @param offset A partir de que reparación se va a devolver\r\n    * @returns Promise<CarRepair[]>\r\n    */\r\n   public async gerByCarPlate(carPlate:string,element:number,offset:number):Promise<CarRepair[]>{\r\n     \r\n    return this.getListData(this.URLDatabase+this.endpoint+\"/carPlate/\"+carPlate+\"/elements/\"+element+\"/page/\"+offset);\r\n   }\r\n\r\n   //ByClientName\r\n\r\n   /**\r\n    * Método que devuelve una lista de reparaciones en función del dueño del coche\r\n    * @param clientName Nombre del cliente del que se quiera obtener las reparaciones\r\n    * @param element Número de reparaciones que se quiera obtener\r\n    * @param offset A oartir de que reparación se va a devolver\r\n    * @returns Promise<CarRepair[]>\r\n    */\r\n   public async getByClientName(clientName:string,element:number,offset:number):Promise<CarRepair[]>{\r\n\r\n    return this.getListData(this.URLDatabase+this.endpoint+\"/clientName/\"+clientName+\"/elements/\"+element+\"/page/\"+offset);\r\n   }\r\n\r\n   //ByDateOrderPaged\r\n\r\n   /**\r\n    * Método que devuelve una lista de reparaciones que se encuentre entre dos fechas\r\n    * @param ini Fecha mas antigua\r\n    * @param end Fecha mas moderna\r\n    * @param element Número de reparaciones que se quiera obtener\r\n    * @param offset A partir de que elemento se quiere empezar a contar\r\n    * @returns \r\n    */\r\n   public async getByDateOrderPaged(ini:Date,end:Date,element:number,offset:number):Promise<CarRepair[]>{\r\n\r\n    return this.getListData(this.URLDatabase+this.endpoint+\"/ini/\"+ini+\"/end/\"+end+\"/elements/\"+element+\"/page/\"+offset);\r\n   }\r\n\r\n   //ByPointsPaged\r\n\r\n   /**\r\n    * Método que devuelve una lista de reparaciones que tengan los puntos entre un rango determinado\r\n    * @param min número mínimo de puntos que se quiera buscar\r\n    * @param max número máximo de puntos que se quiera buscar\r\n    * @param element Número de reparaciones que se quiera obtener\r\n    * @param offset A partir de que elemento se quiere empezar a contar\r\n    * @returns Promise<CarRepair[]>\r\n    */\r\n   public async getByPointsPaged(min:number,max:number,element:number,offset:number):Promise<CarRepair[]>{\r\n\r\n    return this.getListData(this.URLDatabase+this.endpoint+\"/min/\"+min+\"/max/\"+max+\"/elements/\"+element+\"/page/\"+offset);\r\n   }\r\n\r\n   //ByStatedPaged\r\n\r\n   /**\r\n    * Método que devuelve una lista con las reparaciones en función de si están o no terminadas\r\n    * @param repaired booleano que indica si se quiere buscar las reparaciones terminadas o no\r\n    * @param element Número de reparaciones que se quiera obtener\r\n    * @param offset A partir de que elemento se quiere empezar a contar\r\n    * @returns Promise<CarRepair[]>\r\n    */\r\n   public async getByStatedPaged(repaired:boolean,element:number,offset:number):Promise<CarRepair[]>{\r\n     \r\n    return this.getListData(this.URLDatabase+this.endpoint+\"/repaired/\"+repaired+\"/elements/\"+element+\"/page/\"+offset);\r\n   }\r\n\r\n   //CreateOrUpdate\r\n\r\n   /**\r\n    * Método que guarda o actualiza una reparacion en la base de datos\r\n    * @param carRepair Reparación que se quiera guardar o actualizar\r\n    * @returns Promise<CarRepair>\r\n    */\r\n   public async createOrUpdate(carRepair:CarRepair):Promise<CarRepair>{\r\n     if(carRepair!=null){\r\n       if(carRepair.carPlate!=null\r\n        //&&carRepair.model!=null\r\n        //&&carRepair.brandCar!=null\r\n       // &&carRepair.clientName!=null\r\n        //&&carRepair.dateOrder!=null        \r\n        //&&carRepair.repaired!=null\r\n        //&&carRepair.myAgency!=null\r\n        ){\r\n          const body=carRepair;\r\n          console.log(\"Entra?\"+body);\r\n\r\n          return new Promise(resolve=>{\r\n            this.http.post(this.URLDatabase+this.endpoint,body).subscribe((data:any)=>{\r\n\r\n              carRepair=data;\r\n              resolve(carRepair);\r\n            },error=>{\r\n              resolve(carRepair);\r\n              //meter una alerta que indique que se ha producido un error\r\n            });\r\n\r\n          });\r\n\r\n        }else{\r\n          //meter una alerta que señale que algún campo es nulo\r\n        }\r\n\r\n     }else{\r\n       //meter una alerta que señale que la reparación es nula\r\n     }\r\n   }\r\n\r\n   //delete\r\n\r\n   /**\r\n    * Método que borra una reparación de la base de datos\r\n    * @param carRepair reparación que se quiera borrar\r\n    * @returns Promise<boolean> boleano que indica si la reparación se ha borrado o no\r\n    */\r\n   public delete(carRepair:CarRepair):Promise<boolean>{\r\n\r\n    return new Promise(resolve=>{\r\n\r\n      this.http.delete<CarRepair>(this.URLDatabase+this.endpoint,{body:carRepair}).subscribe(()=>{\r\n        resolve(true);\r\n      },error=>{\r\n        resolve(false);\r\n        //meter una alerta que señale que no se ha borrado la reparación\r\n      });\r\n    });\r\n   }\r\n\r\n}\r\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>CarRepairUpdate</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div class=\\\"body\\\">\\r\\n    <form [formGroup]=\\\"formCarRepair\\\" class=\\\"ion-padding\\\">\\r\\n      <div class=\\\"formulario\\\">\\r\\n      <ion-grid>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Operación</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input type=\\\"number\\\" min=\\\"0\\\" max=\\\"99999\\\" inputmode=\\\"numeric\\\" class=\\\"customInput\\\" formControlName=\\\"operation\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Matrícula</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"carPlate\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Modelo</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"5\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"model\\\"></ion-input>\\r\\n          </ion-col>          \\r\\n        </ion-row>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Marca</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"5\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"brandCar\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Cliente</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\"  type=\\\"text\\\" formControlName=\\\"clientName\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>NOR</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"nor\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Coste</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"amount\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Puntos</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"asigPoints\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Agencia</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n            <ion-input class=\\\"customInput\\\" Disabled type=\\\"text\\\" formControlName=\\\"myAgency\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col   sizeSm=\\\"7\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Fecha de alta</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col  sizeSm=\\\"7\\\" sizeLg=\\\"4\\\" >\\r\\n            <ion-input class=\\\"customInput\\\"  type=\\\"date\\\" formControlName=\\\"dateOrder\\\"></ion-input>\\r\\n          </ion-col>\\r\\n         \\r\\n         \\r\\n        </ion-row> \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"7\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Fecha de reparación</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col  sizeSm=\\\"7\\\" sizeLg=\\\"4\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"date\\\" formControlName=\\\"dateRepair\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row> \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col  sizeSm=\\\"7\\\" sizeLg=\\\"2\\\">\\r\\n            Reparado\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"7\\\" sizeLg=\\\"4\\\">\\r\\n            <ion-item  lines=\\\"none\\\">\\r\\n              No<ion-toggle formControlName=\\\"repaired\\\"></ion-toggle>Si\\r\\n           </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row> \\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\" (click)=\\\"closeModal()\\\" class=\\\"button\\\">\\r\\n              Cancelar\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"6\\\">\\r\\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\" (click)=\\\"editCarRepair()\\\" class=\\\"button\\\">\\r\\n              Guardar\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </div>\\r\\n    </form>  \\r\\n</div>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}