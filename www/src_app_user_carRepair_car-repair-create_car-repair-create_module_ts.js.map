{"version":3,"file":"src_app_user_carRepair_car-repair-create_car-repair-create_module_ts.js","mappings":"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","sources":["./src/app/user/carRepair/car-repair-create/car-repair-create-routing.module.ts","./src/app/user/carRepair/car-repair-create/car-repair-create.module.ts","./src/app/user/carRepair/car-repair-create/car-repair-create.page.ts","./src/app/user/carRepair/car-repair-create/car-repair-create.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CarRepairCreatePage } from './car-repair-create.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CarRepairCreatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CarRepairCreatePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CarRepairCreatePageRoutingModule } from './car-repair-create-routing.module';\r\n\r\nimport { CarRepairCreatePage } from './car-repair-create.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CarRepairCreatePageRoutingModule,\r\n\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [CarRepairCreatePage]\r\n})\r\nexport class CarRepairCreatePageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IonDatetime, IonToggle, LoadingController, PickerController, ToastController } from '@ionic/angular';\r\nimport { Agency } from 'src/app/models/Agency';\r\nimport { CarRepair } from 'src/app/models/CarRepair';\r\nimport { AgencyService } from 'src/app/services/agency.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { CarRepairService } from 'src/app/services/car-repair.service';\r\nimport { DateTimeServiceService } from 'src/app/services/date-time-service.service';\r\nimport { UtilService } from 'src/app/services/util.service';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { Route, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-car-repair-create',\r\n  templateUrl: './car-repair-create.page.html',\r\n  styleUrls: ['./car-repair-create.page.scss'],\r\n})\r\nexport class CarRepairCreatePage implements OnInit {\r\n\r\n  @ViewChild(IonToggle) toggle: IonToggle;\r\n   //variables para la fecha\r\n   @ViewChild(IonDatetime) datetime: IonDatetime;\r\n   //Guarda la fecha con el formato de españa\r\n   public spanishDateOrder:string;\r\n\r\n   //Guarda la fecha de la reparación con un formato legible para el ion-dateTime\r\n   public stringDateOrder:string;\r\n   //variable que guarda los datos proporcionados por el evento del ion-dateTime\r\n   public dateValue = '';\r\n  //Variable que guarda la fecha de reparación con el formato correcto para ser enviado a la api\r\n  public formatedString;\r\n\r\n  public myAgency:Agency;\r\n\r\n  public formCarRepair:FormGroup;\r\n  public validator;\r\n  public carRepairs:CarRepair;\r\n\r\n\r\n\r\n  constructor(\r\n    private carRepairService:CarRepairService,\r\n    private formBuilder:FormBuilder,\r\n    private pickerController:PickerController,\r\n    private utilService:UtilService,\r\n    private authService:AuthService,\r\n    private agencyService:AgencyService,\r\n    private dateTimeService:DateTimeServiceService,\r\n    private router:Router\r\n\r\n  ) {\r\n    this.createFormGroup();\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.myAgency=this.authService.agency;\r\n    this.setDate();\r\n  }\r\n\r\n  onSubmit(){\r\n    this.create();\r\n  }\r\n\r\n  /**\r\n   * Método que guarda la reparación en la base de datos\r\n   */\r\n  public async create():Promise<void>{\r\n\r\n    await this.utilService.presentLoading();\r\n    if(this.authService.agency!=null){\r\n\r\n      let cp:string=this.formCarRepair.get(\"carPlate\").value;\r\n      cp=cp.toUpperCase();\r\n\r\n      let newCarRepair:CarRepair={\r\n        operation:0,\r\n        carPlate:cp,\r\n        model:this.formCarRepair.get(\"model\").value,\r\n        brandCar:this.formCarRepair.get(\"brandCar\").value,\r\n        clienteName:this.formCarRepair.get(\"clienteName\").value,\r\n        dateOrder:this.formatedString,\r\n        nor:0,\r\n        amount:0,\r\n        dateRepair:null,\r\n        asigPoints:0,\r\n        repaired:false,\r\n        myAgency:this.authService.agency\r\n      }\r\n      try {\r\n        if(newCarRepair.carPlate.length>4){\r\n          newCarRepair=await this.carRepairService.createOrUpdate(newCarRepair);\r\n          if(newCarRepair.id){\r\n            this.formCarRepair.reset();\r\n            this.utilService.presentToast(\"La reparación se ha creado correctamente.\",'success',\"checkmark-circle-outline\");\r\n            this.carRepairService.added=true;\r\n            this.routeCarRepairList();\r\n          }else{\r\n            this.utilService.presentToast(\"Ha surgido un error al intentar crear la reparacion\",'danger','ban');\r\n          }\r\n        }else{\r\n          this.utilService.presentToast(\"La matrícula debe tener más de cuatro caracteres\",'danger','ban')\r\n        }\r\n\r\n\r\n\r\n      } catch (error) {\r\n\r\n      }finally{\r\n        await this.utilService.hideLoading();\r\n      }\r\n\r\n    }\r\n\r\n    else {\r\n      this.utilService.presentToast(\"Ha habido un error relacionado con su agencia. Inténtelo más tarde.\",\"danger\",\"ban\");\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Método que crea el FormGroup con los campos necesarios\r\n   */\r\n  public createFormGroup():void{\r\n    this.formCarRepair=this.formBuilder.group({\r\n    carPlate:[\"\",[Validators.required,Validators.minLength(4),Validators.maxLength(10)]],\r\n    model:[\"\",[Validators.required, Validators.minLength(2),Validators.maxLength(50)]],\r\n    brandCar:[\"\",[Validators.required, Validators.minLength(2),Validators.maxLength(50)]],\r\n    clienteName:[\"\",[Validators.required, Validators.minLength(2),Validators.maxLength(50)]],\r\n    dateOrder:[\"\"],\r\n    myAgency:[this.authService.agency]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Método que devuelve un booleano que muestra esta bien relleno el formulario\r\n   */\r\n  get errorControl() {\r\n    return this.formCarRepair.controls;\r\n  }\r\n\r\n\r\n\r\n    //Métodos para cerrar y abrir el modal de DateTime\r\n   /**\r\n   * Metodo que se usa en el ion-DateTime para confirmar la fecha elegida\r\n   */\r\n    confirm() {\r\n      this.datetime.confirm(true);\r\n    }\r\n    /**\r\n     * Método que se usa en ion-DateTime para cerrar la ventana\r\n     */\r\n    reset() {\r\n      this.datetime.cancel(true);\r\n    }\r\n\r\n    ////Métodos para cambiar la fecha\r\n    setDate(){\r\n      let date:Date=new Date(Date.now());\r\n      this.spanishDateOrder=this.dateTimeService.formatSpanishDateString(date.toISOString());\r\n      this.formatedString=this.dateTimeService.formatString(date.toISOString());\r\n\r\n\r\n    }\r\n   /**\r\n   * Método que asigna la fecha de reparación cuando el usuario pulsa el botón de aceptar en el ión date time\r\n   * @param event\r\n   */\r\n    changeDateRepair(event){\r\n      this.spanishDateOrder=this.dateTimeService.formatSpanishDateString(event);\r\n      this.stringDateOrder=this.dateTimeService.formatString(event);\r\n      this.dateValue=event;\r\n      this.formatedString=this.formatDate(this.dateValue);\r\n\r\n    }\r\n     /**\r\n   * Metodo para darle formato a la fecha y que se pueda guardar en la base de datos\r\n   * @param value\r\n   * @returns fecha con el formato yyyy-MM-ddTHH:mm\r\n   */\r\n  formatDate(value: string):string {\r\n    return format(parseISO(value), 'yyyy-MM-dd HH:mm:SS');\r\n  }\r\n\r\n  /**\r\n   * Método que cambia a la página con todas las reparaciones\r\n   */\r\n  public routeCarRepairList(){\r\n    this.router.navigateByUrl('tab-user/car-repair/list');\r\n  }\r\n\r\n}\r\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar color=\\\"medium\\\">\\r\\n    <ion-title>Crear Reparación</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div class=\\\"body\\\">\\r\\n    <form [formGroup]=\\\"formCarRepair\\\" (ngSubmit)=\\\"create()\\\" class=\\\"ion-padding\\\">\\r\\n      <div class=\\\"formulario\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row class=\\\"ion-align-items-center\\\" style=\\\"margin-left:-2% !important;\\\">\\r\\n\\r\\n            <ion-col >\\r\\n\\r\\n              <ion-item button=\\\"true\\\" id=\\\"open-date-input\\\">\\r\\n                <ion-text>Fecha de Alta:   {{ spanishDateOrder }}</ion-text>\\r\\n                <ion-popover trigger=\\\"open-date-input\\\" show-backdrop=\\\"false\\\">\\r\\n                  <ng-template>\\r\\n                    <ion-datetime color=\\\"secondary\\\" #popoverDatetime [value]=\\\"stringDateOrder\\\"\\r\\n                      (ionChange)=\\\"changeDateRepair(popoverDatetime.value)\\\">\\r\\n                      <ion-buttons slot=\\\"buttons\\\">\\r\\n                        <ion-button shape=\\\"round\\\" class=\\\"button\\\" (click)=\\\"confirm()\\\">Aceptar</ion-button>\\r\\n                        <ion-button shape=\\\"round\\\" class=\\\"button\\\" (click)=\\\"reset()\\\">Cancelar</ion-button>\\r\\n                      </ion-buttons>\\r\\n                    </ion-datetime>\\r\\n                  </ng-template>\\r\\n                </ion-popover>\\r\\n              </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Matrícula</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input class=\\\"customInput\\\" type=\\\"text\\\" style=\\\"text-transform: uppercase\\\" formControlName=\\\"carPlate\\\" required=\\\"true\\\"></ion-input>\\r\\n              <span class=\\\"invalid\\\" *ngIf=\\\"this.formCarRepair.get('carPlate').invalid&&formCarRepair.get('carPlate').touched\\\">\\r\\n                *Debe rellenar este campo. Introduzca entre 4 y 10 caracteres.\\r\\n              </span>\\r\\n            </ion-col>\\r\\n\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Modelo</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"5\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"model\\\" required=\\\"true\\\"></ion-input>\\r\\n              <span class=\\\"invalid\\\" *ngIf=\\\"this.formCarRepair.get('model').invalid&&formCarRepair.get('model').touched\\\">\\r\\n                *Debe rellenar este campo. Introduzca entre 2 y 50 caracteres.\\r\\n              </span>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Marca</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"5\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"brandCar\\\" required=\\\"true\\\"></ion-input>\\r\\n              <span class=\\\"invalid\\\" *ngIf=\\\"this.formCarRepair.get('brandCar').invalid&&formCarRepair.get('brandCar').touched\\\">\\r\\n                *Debe rellenar este campo. Introduzca entre 2 y 50 caracteres.\\r\\n              </span>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n              <ion-label>Cliente</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"10\\\">\\r\\n              <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"clienteName\\\" required=\\\"true\\\"></ion-input>\\r\\n              <span class=\\\"invalid\\\" *ngIf=\\\"this.formCarRepair.get('clienteName').invalid&&formCarRepair.get('clienteName').touched\\\">\\r\\n                *Debe rellenar este campo. Introduzca entre 2 y 50 caracteres.\\r\\n              </span>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n\\r\\n          <ion-row class=\\\"ion-align-items-center\\\">\\r\\n\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-button expand=\\\"block\\\" type=\\\"submit\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\"\\r\\n                class=\\\"button\\\" [disabled]=\\\"this.formCarRepair.invalid\\\">\\r\\n                Guardar\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-button  expand=\\\"block\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\" class=\\\"button2\\\" (click)=\\\"routeCarRepairList()\\\">\\r\\n                Cancelar\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}