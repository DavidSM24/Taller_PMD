{"version":3,"file":"src_app_administrator_user_user-create_user-create_module_ts.js","mappings":"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","sources":["./src/app/administrator/user/user-create/user-create-routing.module.ts","./src/app/administrator/user/user-create/user-create.module.ts","./src/app/administrator/user/user-create/user-create.page.ts","./src/app/services/user.service.ts","./src/app/administrator/user/user-create/user-create.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserCreatePage } from './user-create.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserCreatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserCreatePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserCreatePageRoutingModule } from './user-create-routing.module';\r\n\r\nimport { UserCreatePage } from './user-create.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    UserCreatePageRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [UserCreatePage]\r\n})\r\nexport class UserCreatePageModule {}\r\n","import { Component, ViewChild } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IonToggle, LoadingController, PickerColumnOption, PickerController, PickerOptions, ToastController } from '@ionic/angular';\r\nimport { Agency } from 'src/app/models/Agency';\r\nimport { InsuranceCompany } from 'src/app/models/InsuranceCompany';\r\nimport { User } from 'src/app/models/User';\r\nimport { AgencyService } from 'src/app/services/agency.service';\r\nimport { InsuranceCompanyService } from 'src/app/services/insurance-company.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { UtilService } from '../../../services/util.service';\r\n@Component({\r\n  selector: 'app-user-create',\r\n  templateUrl: './user-create.page.html',\r\n  styleUrls: ['./user-create.page.scss'],\r\n})\r\nexport class UserCreatePage {\r\n  @ViewChild(IonToggle) toggle: IonToggle;\r\n\r\n  public admin: boolean = false;\r\n  public active: boolean = false;\r\n\r\n  public miLoading: HTMLIonLoadingElement;\r\n  public formUser: FormGroup;\r\n\r\n  public insurance: InsuranceCompany = null;\r\n  public formAgency: FormGroup;\r\n  public companies: InsuranceCompany[];\r\n\r\n  constructor(\r\n    private usserv: UserService,\r\n    private as: AgencyService,\r\n    private is: InsuranceCompanyService,\r\n    private fb: FormBuilder,\r\n    private uts: UtilService,\r\n    private pickerController: PickerController,) {\r\n\r\n    this.formUser = this.fb.group({\r\n      code: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n      email: [\"\", Validators.required],\r\n      name: [\"\", Validators.required]\r\n    });\r\n\r\n    this.formAgency = this.fb.group({\r\n      zipCode: [\"\", Validators.required],\r\n      address: [\"\", Validators.required],\r\n      location: [\"\", Validators.required],\r\n      phoneNumber: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  async ionViewWillEnter() {\r\n\r\n    this.uts.presentLoading();\r\n    this.companies = await this.is.getAll();\r\n    if (this.companies.length <= 0) {\r\n      this.uts.presentToast('Para crear agencias, deben existir compañías de seguros.', 'danger');\r\n    }\r\n    this.uts.hideLoading();\r\n  }\r\n\r\n  public async CreateUser(): Promise<void> {\r\n    this.uts.presentLoading();\r\n    try {\r\n      let newUser: User = {\r\n        code: this.formUser.get(\"code\").value,\r\n        password: this.formUser.get(\"password\").value,\r\n        administrator: this.admin,\r\n        email: this.formUser.get(\"email\").value,\r\n        name: this.formUser.get(\"name\").value\r\n      }\r\n\r\n      try {\r\n        newUser=await this.usserv.createOrUpdate(newUser);\r\n\r\n        this.uts.presentToast(\"Usuario agregado correctamente\", \"success\");\r\n        this.formUser.reset();\r\n\r\n        if (!this.admin) {\r\n          if (this.insurance != null) {\r\n            let ag: Agency = await this.as.getById(7);\r\n  \r\n  \r\n            let newAgency: Agency = {\r\n              zipCode: this.formAgency.get(\"zipCode\").value,\r\n              address: this.formAgency.get(\"address\").value,\r\n              location: this.formAgency.get(\"location\").value,\r\n              phoneNumber: this.formAgency.get(\"phoneNumber\").value,\r\n              amount: 0,\r\n              points: 0,\r\n              pointsRedeemed: 0,\r\n              myInsuranceCompany: this.insurance,\r\n              myCarRepairs: [],\r\n              myExchangesGifts: [],\r\n              myUser: newUser,\r\n              active: this.active\r\n            }\r\n  \r\n            console.log(newAgency);\r\n            newAgency = await this.as.createOrUpdate(newAgency);\r\n            if (newAgency.id) {\r\n              this.formAgency.reset();\r\n              this.uts.presentToast('La agencia se ha creado correctamente.', 'success');\r\n            }\r\n            else {\r\n              this.uts.presentToast('Un error ha surgido al intentar crear la agencia.', 'danger');\r\n            }\r\n  \r\n          }\r\n        }\r\n      } catch (err) {\r\n        this.uts.presentToast(\"Error agregando Usuario\", \"danger\");\r\n      }\r\n\r\n    } catch (error) {\r\n      this.uts.hideLoading();\r\n      console.log(error)\r\n    }\r\n    this.uts.hideLoading();\r\n  }\r\n\r\n  \r\n  async showPicker() {\r\n    let options: PickerOptions = {\r\n      buttons: [\r\n        {\r\n          text: \"Cancel\",\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: 'Ok',\r\n          handler: (value: any) => {\r\n            this.insurance = value.Compañías.value;\r\n          }\r\n        }\r\n      ],\r\n      columns: [{\r\n        name: 'Compañías',\r\n        options: this.getColumnOptions()\r\n      }]\r\n    };\r\n\r\n    let picker = await this.pickerController.create(options);\r\n    picker.present()\r\n  }\r\n\r\n  getColumnOptions() {\r\n    let options = [];\r\n    this.companies.forEach(x => {\r\n      options.push({ text: x.cia_Name, value: x });\r\n    });\r\n    return options;\r\n  }\r\n\r\n  public changeAdmin() {\r\n    this.admin = !this.admin;\r\n  }\r\n\r\n  public changeActive() {\r\n    this.active = !this.active;\r\n  }\r\n}\r\nexport interface PickerColumn {\r\n  name: string;\r\n  align?: string;\r\n  selectedIndex?: number;\r\n  prevSelected?: number;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  options: PickerColumnOption[];\r\n  cssClass?: string | string[];\r\n  columnWidth?: string;\r\n  prefixWidth?: string;\r\n  suffixWidth?: string;\r\n  optionsWidth?: string;\r\n  refresh?: () => void;\r\n} \r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/User';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  endpoint: string = \"/users\";\r\n\r\n  URLDatabase: string;\r\n  constructor(public http: HttpClient) {\r\n    this.URLDatabase = environment.herokuConfig.url;\r\n   }\r\n  \r\n  private async getListData(endpoint: string): Promise<User[]> {\r\n    let users: User[] = [];\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(endpoint).subscribe((data: any[]) => {\r\n\r\n        if (data != null && data.length > 0) {\r\n\r\n          for (let miuser of data) {\r\n            const tmp: User = {\r\n              id: miuser.id,\r\n              code: miuser.code,\r\n              password: miuser.password,\r\n              administrator: miuser.administrator,\r\n              email: miuser.email,\r\n              name: miuser.name\r\n            }\r\n\r\n            users.push(tmp);\r\n          }\r\n        }\r\n        console.log(data);\r\n        resolve(users);\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n    });\r\n  }\r\n  public async getAllPaged(element: number, page: number):Promise<User[]>{\r\n    return this.getListData(this.URLDatabase + this.endpoint + \"/element/\" + element + \"/page/\" + page);\r\n  }\r\n\r\n  public async getAll():Promise<User[]>{\r\n    return this.getListData(this.URLDatabase + this.endpoint);\r\n  }\r\n\r\n\r\n  public async getById(id: number): Promise<User> {\r\n\r\n    let user: User = null;\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(this.URLDatabase + this.endpoint + \"/id/\" + id).subscribe((miuser: any) => {\r\n\r\n        if (miuser.id) {\r\n          const tmp: User = {\r\n            id: miuser.id,\r\n            code: miuser.code,\r\n            password: miuser.password,\r\n            administrator: miuser.administrator,\r\n            email: miuser.email,\r\n            name: miuser.name\r\n          }\r\n          user = tmp;\r\n        }\r\n        console.log(user);\r\n        resolve(user);\r\n      }, error => {\r\n        console.log(error);\r\n        console.log(user);\r\n        resolve(user);\r\n      });\r\n    });\r\n  }\r\n  \r\n  public async getByAvailable():Promise<User[]>{\r\n    return this.getListData(this.URLDatabase + this.endpoint + \"/available\");\r\n  }\r\n\r\n  public async getByCode(code:number):Promise<User>{\r\n    let user: User = null;\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(this.URLDatabase + this.endpoint + \"/code/\" + code).subscribe((miuser: any) => {\r\n\r\n        if (miuser.code) {\r\n          const tmp: User = {\r\n            id: miuser.id,\r\n            code: miuser.code,\r\n            password: miuser.password,\r\n            administrator: miuser.administrator,\r\n            email: miuser.email,\r\n            name: miuser.name\r\n          }\r\n          user = tmp;\r\n        }\r\n        console.log(user);\r\n        resolve(user);\r\n      }, error => {\r\n        console.log(error);\r\n        console.log(user);\r\n        resolve(user);\r\n      });\r\n    });\r\n  }\r\n  public async getByName(name:string):Promise<User>{\r\n    let user: User = null;\r\n\r\n    return new Promise(resolve => {\r\n      this.http.get(this.URLDatabase + this.endpoint + \"/name/\" + name).subscribe((miuser: any) => {\r\n\r\n        if (miuser.name) {\r\n          const tmp: User = {\r\n            id: miuser.id,\r\n            code: miuser.code,\r\n            password: miuser.password,\r\n            administrator: miuser.administrator,\r\n            email: miuser.email,\r\n            name: miuser.name\r\n          }\r\n          user = tmp;\r\n        }\r\n        console.log(user);\r\n        resolve(user);\r\n      }, error => {\r\n        console.log(error);\r\n        console.log(user);\r\n        resolve(user);\r\n      });\r\n    });\r\n  }\r\n  public async getAllUserAgenciesPaged(administrator:boolean, element: number, page: number):Promise<User[]>{\r\n    return this.getListData(this.URLDatabase+\"/administrator/\" + this.endpoint + \"/element/\" + element + \"/page/\" + page);\r\n  }\r\n\r\n  public async getAllAdminPaged(administrator:boolean, element: number, page: number):Promise<User[]>{\r\n    return this.getListData(this.URLDatabase+\"/administrator/\" + this.endpoint + \"/element/\" + element + \"/page/\" + page);\r\n  }\r\n\r\n  public async createOrUpdate(user:User):Promise<User>{\r\n    if (user != null) {\r\n      const body=user;\r\n      return new Promise(resolve => {\r\n\r\n        this.http.post(this.URLDatabase + this.endpoint, body).subscribe((miuser: any) => {\r\n          let result: User = {\r\n            id: miuser.id,\r\n            code: miuser.code,\r\n            password: miuser.password,\r\n            administrator: miuser.administrator,\r\n            email: miuser.email,\r\n            name: miuser.name\r\n          }\r\n          resolve(result);\r\n        }, error => {\r\n          console.log(error);\r\n          resolve(user);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  public async delete(user:User):Promise<boolean>{\r\n    return new Promise(resolve => {\r\n      this.http.delete<User>(this.URLDatabase + this.endpoint, { body: user }).subscribe(() => {\r\n        resolve(true);\r\n      }, error => {\r\n        console.log(error);\r\n        resolve(false);\r\n      });\r\n    });\r\n  }\r\n}\r\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>\\r\\n      Creacion de Usuario\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div class=\\\"body\\\">\\r\\n    \\r\\n    <form [formGroup]=\\\"formUser\\\" class=\\\"ion-padding\\\">\\r\\n\\r\\n      <div class=\\\"formulario\\\">\\r\\n      <ion-grid>\\r\\n\\r\\n        <h2>Datos del Usuario</h2>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Code:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"code\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Contraseña:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Email:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Name:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        \\r\\n      </ion-grid>\\r\\n    </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"ion-padding\\\">\\r\\n    <div class=\\\"formulario\\\" style=\\\"margin-top:-0.5% !important;margin-left:1.5%;margin-right:1.5%\\\">\\r\\n      <ion-row class=\\\"ion-align-items-center\\\">\\r\\n        <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"2\\\">\\r\\n          Administrador:\\r\\n        </ion-col>\\r\\n        <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"11  \\\">\\r\\n          <ion-item  lines=\\\"none\\\" (click)=\\\"changeAdmin()\\\">\\r\\n            No<ion-toggle></ion-toggle>Si\\r\\n         </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <br>\\r\\n\\r\\n    <form *ngIf=\\\"!(this.admin)\\\" [formGroup]=\\\"formAgency\\\" style=\\\"margin-top: -2% !important;\\\">\\r\\n      <div style=\\\"margin-bottom: 0% !important;\\\">\\r\\n      <ion-grid>\\r\\n        \\r\\n        <h2>Datos de la Agencia</h2>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Código Zip:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input type=\\\"number\\\" class=\\\"customInput\\\" formControlName=\\\"zipCode\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Dirección:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Localidad:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1\\\" sizeLg=\\\"1\\\">\\r\\n            <ion-label>Número de Teléfono:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"11\\\" sizeLg=\\\"11\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"9\\\" sizeLg=\\\"1\\\">\\r\\n            Activa:\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"3\\\" sizeLg=\\\"11  \\\">\\r\\n            <ion-item  lines=\\\"none\\\" (click)=\\\"changeActive()\\\">\\r\\n              No<ion-toggle></ion-toggle>Si\\r\\n           </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        \\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Compañía de Seguros:</ion-label>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n\\r\\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"showPicker()\\\" *ngIf=\\\"this.insurance==null\\\">\\r\\n              Seleccionar\\r\\n            </ion-button>\\r\\n\\r\\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"showPicker()\\\" *ngIf=\\\"this.insurance!=null\\\">\\r\\n              {{this.insurance.cia_Name}}\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-grid>\\r\\n    </div>\\r\\n    </form>\\r\\n\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-button expand=\\\"block\\\" shape=\\\"round\\\" class=\\\"button\\\" routerLink=\\\"/tab-administrator/agency/list\\\">\\r\\n            Cancelar\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n  \\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-button (click)=\\\"CreateUser()\\\" expand=\\\"block\\\" shape=\\\"round\\\" style=\\\"margin-top: 2% !important;\\\" class=\\\"button\\\" [disabled]=\\\"((!this.admin)&&this.formAgency.invalid)||this.formUser.invalid||((!this.admin)&&this.formAgency.invalid)||((!this.admin)&&this.insurance==null)\\\">\\r\\n            Crear\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </div>\\r\\n</div>º\\r\\n</div>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}