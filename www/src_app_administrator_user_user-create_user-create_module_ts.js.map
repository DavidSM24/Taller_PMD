{"version":3,"file":"src_app_administrator_user_user-create_user-create_module_ts.js","mappings":"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","sources":["./src/app/administrator/user/user-create/user-create-routing.module.ts","./src/app/administrator/user/user-create/user-create.module.ts","./src/app/administrator/user/user-create/user-create.page.ts","./src/app/administrator/user/user-create/user-create.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserCreatePage } from './user-create.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserCreatePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserCreatePageRoutingModule {}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { UserCreatePageRoutingModule } from './user-create-routing.module';\r\n\r\nimport { UserCreatePage } from './user-create.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    UserCreatePageRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [UserCreatePage]\r\n})\r\nexport class UserCreatePageModule {}","import { Component, ViewChild } from '@angular/core';\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IonToggle, LoadingController, PickerColumnOption, PickerController, PickerOptions, ToastController } from '@ionic/angular';\r\nimport { Agency } from 'src/app/models/Agency';\r\nimport { InsuranceCompany } from 'src/app/models/InsuranceCompany';\r\nimport { User } from 'src/app/models/User';\r\nimport { AgencyService } from 'src/app/services/agency.service';\r\nimport { InsuranceCompanyService } from 'src/app/services/insurance-company.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { UtilService } from '../../../services/util.service';\r\n@Component({\r\n  selector: 'app-user-create',\r\n  templateUrl: './user-create.page.html',\r\n  styleUrls: ['./user-create.page.scss'],\r\n})\r\nexport class UserCreatePage {\r\n  @ViewChild(IonToggle) toggle: IonToggle;\r\n\r\n  public admin: boolean = false;\r\n  public active: boolean = false;\r\n\r\n  public miLoading: HTMLIonLoadingElement;\r\n  public formUser: FormGroup;\r\n\r\n  public insurance: InsuranceCompany = null;\r\n  public formAgency: FormGroup;\r\n  public companies: InsuranceCompany[];\r\n  public errorCompany:boolean;\r\n\r\n  constructor(\r\n    private usserv: UserService,\r\n    private as: AgencyService,\r\n    private is: InsuranceCompanyService,\r\n    private fb: FormBuilder,\r\n    private uts: UtilService,\r\n    private pickerController: PickerController,) {\r\n\r\n    this.formUser = this.fb.group({\r\n      code: [\"\", [Validators.required,Validators.pattern(\"[0-9]{1,3}\")]],\r\n      password: [\"\", [Validators.required,Validators.pattern(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[ -/:-@\\[-`{-~]).{5,10}$\")]],\r\n      email: [\"\", [Validators.required,Validators.email, Validators.minLength(4),Validators.maxLength(50)]],\r\n      name: [\"\", [Validators.required,Validators.minLength(3),Validators.maxLength(100)]]\r\n    });\r\n\r\n    this.formAgency = this.fb.group({\r\n      zipCode: [\"\",  [Validators.required, Validators.pattern(\"[0-9]{2,21}\")]],\r\n      address: [\"\", [Validators.required,Validators.maxLength(50),Validators.minLength(4)]],\r\n      location: [\"\", [Validators.required,Validators.maxLength(50),Validators.minLength(4)]],\r\n      phoneNumber: [\"\", [Validators.required,Validators.pattern(\"[0-9]{9}\")]]\r\n    });\r\n  }\r\n\r\n  async ionViewWillEnter() {\r\n\r\n    await this.uts.presentLoading();\r\n    this.companies = [];\r\n    this.companies = await this.is.getAll();\r\n    if (this.companies.length <= 0) {\r\n      this.uts.presentToast('Para crear agencias, deben existir compañías de seguros. Solo podrá crear usuarios administradores.', 'danger', 'ban');\r\n      this.admin = true;\r\n      this.toggle.checked = true;\r\n      this.toggle.disabled = true;\r\n    }\r\n    await this.uts.hideLoading();\r\n  }\r\n\r\n  public async CreateUser(): Promise<void> {\r\n\r\n    //existe codigo igual\r\n\r\n    await this.uts.presentLoading();\r\n    let findByCode:User=await this.usserv.getByCode(this.formUser.get('code').value);\r\n    await this.uts.hideLoading();\r\n\r\n    if (findByCode) {\r\n      this.uts.presentToast(\"Ya existe un usuario con ese código, prueba con otro diferente.\",\"danger\",\"ban\");\r\n    }\r\n\r\n    //insertar\r\n    else {\r\n      await this.uts.presentLoading();\r\n      try {\r\n        let newUser: User = {\r\n          code: this.formUser.get(\"code\").value,\r\n          password: this.formUser.get(\"password\").value,\r\n          administrator: this.admin,\r\n          email: this.formUser.get(\"email\").value,\r\n          name: this.formUser.get(\"name\").value\r\n        }\r\n\r\n        try {\r\n          newUser = await this.usserv.createOrUpdate(newUser);\r\n\r\n          if(this.admin){\r\n            this.uts.presentToast(\"Usuario agregado correctamente\", \"success\", \"checkmark-circle-outline\");\r\n          }\r\n          this.formUser.reset();\r\n\r\n          if (!this.admin) {\r\n            if (this.insurance != null) {\r\n\r\n              let newAgency: Agency = {\r\n                zipCode: this.formAgency.get(\"zipCode\").value,\r\n                address: this.formAgency.get(\"address\").value,\r\n                location: this.formAgency.get(\"location\").value,\r\n                phoneNumber: this.formAgency.get(\"phoneNumber\").value,\r\n                amount: 0,\r\n                points: 0,\r\n                pointsRedeemed: 0,\r\n                myInsuranceCompany: this.insurance,\r\n                myCarRepairs: [],\r\n                myExchangesGifts: [],\r\n                myUser: newUser,\r\n                active: this.active\r\n              }\r\n\r\n              \r\n              newAgency = await this.as.createOrUpdate(newAgency);\r\n              this.as.added = true;\r\n\r\n              if (newAgency.id) {\r\n                this.formAgency.reset();\r\n                this.uts.presentToast('La agencia se ha creado correctamente.', 'success', \"checkmark-circle-outline\");\r\n              }\r\n              else {\r\n                this.uts.presentToast('Un error ha surgido al intentar crear la agencia.', 'danger', 'ban');\r\n              }\r\n\r\n            }\r\n          }\r\n        } catch (err) {\r\n          this.uts.presentToast(\"Ha habido un error al crear el usuario. Compruebe longitud: código (<=3), contraseña: (<=10).\", \"danger\", 'ban');\r\n        }\r\n\r\n      } catch (error) {\r\n        await this.uts.hideLoading();\r\n        \r\n      }\r\n      await this.uts.hideLoading();\r\n    }\r\n\r\n  }\r\n\r\n\r\n  async showPicker() {\r\n    let options: PickerOptions = {\r\n      buttons: [\r\n        {\r\n          text: \"Cancel\",\r\n          role: 'cancel',\r\n          handler: (value: any) => {\r\n            if(!this.insurance) this.errorCompany=true;\r\n          }\r\n        },\r\n        {\r\n          text: 'Ok',\r\n          handler: (value: any) => {\r\n            this.insurance = value.Compañías.value;\r\n            this.errorCompany=false;\r\n          }\r\n        }\r\n      ],\r\n      columns: [{\r\n        name: 'Compañías',\r\n        options: this.getColumnOptions()\r\n      }]\r\n    };\r\n\r\n    let picker = await this.pickerController.create(options);\r\n    picker.present()\r\n  }\r\n\r\n  getColumnOptions() {\r\n    let options = [];\r\n    this.companies.forEach(x => {\r\n      options.push({ text: x.cia_Name, value: x });\r\n    });\r\n    return options;\r\n  }\r\n\r\n  public changeAdmin() {\r\n    this.admin = !this.admin;\r\n  }\r\n\r\n  public changeActive() {\r\n    this.active = !this.active;\r\n  }\r\n}\r\nexport interface PickerColumn {\r\n  name: string;\r\n  align?: string;\r\n  selectedIndex?: number;\r\n  prevSelected?: number;\r\n  prefix?: string;\r\n  suffix?: string;\r\n  options: PickerColumnOption[];\r\n  cssClass?: string | string[];\r\n  columnWidth?: string;\r\n  prefixWidth?: string;\r\n  suffixWidth?: string;\r\n  optionsWidth?: string;\r\n  refresh?: () => void;\r\n}\r\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>\\r\\n      Creacion de Usuario\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div class=\\\"body\\\">\\r\\n\\r\\n    <form [formGroup]=\\\"formUser\\\" class=\\\"ion-padding\\\">\\r\\n\\r\\n      <div class=\\\"formulario\\\">\\r\\n      <ion-grid>\\r\\n\\r\\n        <h2>Datos del Usuario</h2>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Code:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"code\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formUser.get('code').invalid&&formUser.get('code').touched\\\">\\r\\n              *Campo obligatorio. El código zip debe tener una longitud exacta de 3 caracteres.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Contraseña:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formUser.get('password').invalid&&formUser.get('password').touched\\\">\\r\\n              *La contraseña debe contener entre 5 y 10 caracteres, incluyendo una minúsucla, mayúscula, número y símbolo.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Email:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formUser.get('email').invalid&&formUser.get('email').touched\\\">\\r\\n              *Campo obligatorio. Debe introducir un formato de correo válido. Longitud de 4 a 50 caracteres.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Name:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"name\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formUser.get('name').invalid&&formUser.get('name').touched\\\">\\r\\n              *Campo obligatorio. Debe introducir entre 3 y 100 caracteres.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-grid>\\r\\n    </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"ion-padding\\\">\\r\\n    <div class=\\\"formulario\\\" style=\\\"margin-top:-0.5% !important;margin-left:1.5%;margin-right:1.5%\\\">\\r\\n      <ion-row class=\\\"ion-align-items-center\\\">\\r\\n        <ion-col sizeSm=\\\"10\\\" sizeLg=\\\"2\\\">\\r\\n          Administrador:\\r\\n        </ion-col>\\r\\n        <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"11  \\\">\\r\\n          <ion-item  lines=\\\"none\\\" (click)=\\\"changeAdmin()\\\">\\r\\n            No<ion-toggle></ion-toggle>Si\\r\\n         </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <br>\\r\\n\\r\\n    <form *ngIf=\\\"!(this.admin)\\\" [formGroup]=\\\"formAgency\\\" style=\\\"margin-top: -2% !important;\\\">\\r\\n      <div style=\\\"margin-bottom: 0% !important;\\\">\\r\\n      <ion-grid>\\r\\n\\r\\n        <h2>Datos de la Agencia</h2>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Código Zip:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input type=\\\"number\\\" class=\\\"customInput\\\" formControlName=\\\"zipCode\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formAgency.get('zipCode').invalid&&formAgency.get('zipCode').touched\\\">\\r\\n              *Campo obligatorio. Debe introducir entre 2 y 21 caracteres.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Dirección:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"address\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formAgency.get('address').invalid&&formAgency.get('address').touched\\\">\\r\\n              *Campo obligatorio. Debe introducir entre 4 y 50 caracteres.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Localidad:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"text\\\" formControlName=\\\"location\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formAgency.get('location').invalid&&formAgency.get('location').touched\\\">\\r\\n              *Campo obligatorio. Debe introducir entre 4 y 50 caracteres.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"1.3\\\" sizeMd=\\\"2\\\" sizeLg=\\\"1.3\\\">\\r\\n            <ion-label>Número de Teléfono:</ion-label>\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"10.7\\\" sizeMd=\\\"10\\\" sizeLg=\\\"10.7\\\">\\r\\n            <ion-input class=\\\"customInput\\\" type=\\\"number\\\" formControlName=\\\"phoneNumber\\\"></ion-input>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"this.formAgency.get('phoneNumber').invalid&&formAgency.get('phoneNumber').touched\\\">\\r\\n              *Campo obligatorio. Debe introducir un número de telefono de 9 dígitos exactos.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"9\\\" sizeLg=\\\"1\\\">\\r\\n            Activa:\\r\\n          </ion-col>\\r\\n          <ion-col sizeSm=\\\"3\\\" sizeLg=\\\"11  \\\">\\r\\n            <ion-item  lines=\\\"none\\\" (click)=\\\"changeActive()\\\">\\r\\n              No<ion-toggle></ion-toggle>Si\\r\\n           </ion-item>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col sizeSm=\\\"2\\\" sizeLg=\\\"2\\\">\\r\\n            <ion-label>Compañía de Seguros:</ion-label>\\r\\n          </ion-col>\\r\\n\\r\\n          <ion-col size=\\\"rem\\\">\\r\\n\\r\\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"showPicker()\\\" *ngIf=\\\"this.insurance==null\\\">\\r\\n              Seleccionar\\r\\n            </ion-button>\\r\\n\\r\\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"showPicker()\\\" *ngIf=\\\"this.insurance!=null\\\">\\r\\n              {{this.insurance.cia_Name}}\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n          <ion-col>\\r\\n            <p style=\\\"color:red;\\\" *ngIf=\\\"!this.admin&&this.errorCompany\\\">\\r\\n              *Campo obligatorio. Debe seleccionar una compañía de seguros.\\r\\n            </p>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n\\r\\n      </ion-grid>\\r\\n    </div>\\r\\n    </form>\\r\\n\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-button expand=\\\"block\\\" shape=\\\"round\\\" class=\\\"button\\\" routerLink=\\\"/tab-administrator/agency/list\\\">\\r\\n            Volver\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-button (click)=\\\"CreateUser()\\\" expand=\\\"block\\\" shape=\\\"round\\\" class=\\\"button\\\" [disabled]=\\\"((!this.admin)&&this.formAgency.invalid)||this.formUser.invalid||((!this.admin)&&this.formAgency.invalid)||((!this.admin)&&this.insurance==null)\\\">\\r\\n            Crear\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}